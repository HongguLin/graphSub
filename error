<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-COMPATIBLE" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>graphSub</title>
    <title>Animating Changes in Force Diagram</title>
    <script src="http://d3js.org/d3.v3.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <style>
        .link {
            stroke: #2E2E2E;
            stroke-width: 2px;
        }

        .node {
            stroke: #fff;
            stroke-width: 2px;
        }
        .textClass {
            stroke: #323232;
            font-family: "Lucida Grande", "Droid Sans", Arial, Helvetica, sans-serif;
            font-weight: normal;
            stroke-width: .5;
            font-size: 14px;
        }
    </style>
</head>
<body>
<button onclick="reStart()">Restart Animation</button>
<script>
    //<link rel="stylesheet" href="static/css/base.css">
    // add a method conditionaly
    if (!('xpush' in Array.prototype)) {
        // push value to array only if not already present
        Array.prototype.xpush = function(value){
            if(this.indexOf(value) === -1){
                this.push(value);
            };
            return this
        };
    }
    
    d3.json("data/fm.json", function(error, graph) {
    if (error) throw error;
    function chart(elementName) {

        // look for the node in the d3 layout
        var findNode = function(name) {
            for (var i in nodes) {
                if (nodes[i]["name"] === name) return nodes[i];
            };
        };           

        var width = 960, // default width
            height = 450, // default height
            color = d3.scale.category10(),
            force = d3.layout.force(),
            nodes = force.nodes(),
            links = force.links(),
            vis,
            runOnceFlag = true;

        vis = d3.select(elementName)
                .append("svg:svg")
                .attr("width", width)
                .attr("height", height)
                .attr("id", "svg")
                .attr("pointer-events", "all")
                .attr("viewBox", "0 0 " + width + " " + height)
                .attr("perserveAspectRatio", "xMinYMid")
                .append('svg:g');            

        var update = function() {               

            var node = vis.selectAll("g.node")
                    .data(nodes, function (d) {
                        return d.name;
                    });

            var nodeEnter = node.enter().append("g")
                    .attr("class", "node")
                    .call(force.drag);

            nodeEnter.append("svg:circle")
                    .attr("r", 12)
                    .attr("id", function (d) {
                        return "Node;" + d.name;
                    })
                    .attr("class", "nodeStrokeClass")
                    .attr("fill", function(d) { return color(d.group); });

            nodeEnter.append("svg:text")
                    .attr("class", "textClass")
                    .attr("x", 14)
                    .attr("y", ".31em")
                    .text(function (d) {
                        return d.name;
                    });

            node.exit().remove();

            force.on("tick", function () {

                node.attr("transform", function (d) {
                    console.log(d);
                    return "translate(" + d.x + "," + d.y + ")";
                }); 

            });

            // Restart the force layout.
            force
                .charge(-120)
                .linkDistance( function(d) { return d.value * 10 } )
                .size([width, height])
                .start();
        };

        var a = graph.nodes[0];
        var b = graph.nodes[1]
        nodes.push(a);
        update();
        nodes.push(b);
        update();

        // ERROR
        var c = {"source": findNode('a'), "target": findNode('b'), value: 1}
        // the line below causes the error
        links.push(c);
        update()  

        // OK 
/*
        var c = {"source": findNode('a'), "target": findNode('b'), value: 1}
        window.setTimeout(function() {
            force.links().push(c);
            update()
        },2000)         
*/
    };
    ///
    chart('body');
});


</script>
</body>
</html>